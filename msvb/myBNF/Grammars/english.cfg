(was) -> (be)
(were) -> (be)
(is) -> (be)
(are) -> (be)
(being) -> (be)
(been) -> (be)

(went) -> (go)
(goes) -> (go)
(going) -> (go)
(gone) -> (go)

(gave) -> (give)
(gives) -> (give)
(giving) -> (give)
(given) -> (give)

(has) -> (have)
(had) -> (have)

(me) -> (i)
(him) -> (he)
(her) -> (she)
(they) -> (it)

S:= sCmpLst

cop:= 'be'
neg:= 'not'
cCmp:= cop | cop neg
vAux:= 'have'
vAuxCmp:= vAux | vAux neg

conj:= 'and' | 'or'
conj2:= ','
det:= 'the' | 'a'
n:= 'car' | 'i' | 'you' | 'he' | 'she' | 'it'
v:= cop | 'go' | 'give'
adj:= 'red' | 'big'
adv:= 'very' | 'quickly'
prep:= 'from' | 'to' | 'by'

sCmpLst2:= sCmpLst2 conj2 sCmp | sCmp
nCmpLst2:= nCmpLst2 conj2 nCmp | nCmp
pCmpLst2:= pCmpLst2 conj2 pCmp | pCmp
jCmpLst2:= jCmpLst2 conj2 jCmp | jCmp
vCmpLst2:= vCmpLst2 conj2 vCmp | vCmp

sCmpLst:= sCmpLst2 conj sCmp | sCmp
nCmpLst:= nCmpLst2 conj nCmp | nCmp
pCmpLst:= pCmpLst2 conj pCmp | pCmp
jCmpLst:= jCmpLst2 conj jCmp | jCmp
vCmpLst:= vCmpLst2 conj vCmp | vCmp

subj:= nCmpLst
pred:= pCmpLst
obj:= nCmpLst
dobj:= nCmpLst

sCmp:= stmt | pass
nCmp:= n3
pCmp:= action | attrib
jCmp:= adj2
vCmp:= adv

stmt:= subj pred
pass:= vPass | vPass dobj | vPass dobj prep subj | vPass prep subj

n2:= n | jCmpLst n
n3:= n2 | det n2
v2:= v | v dobj | v dobj prep obj | v obj dobj
v3:= v2 | vCmpLst v2 | v2 vCmpLst
vPerf:= vAuxCmp v2
action:= v3 | cCmp v3 | vPerf
attrib:= cCmp jCmpLst

adj2:= adj | adv adj
vPass:= obj vAuxCmp cop v